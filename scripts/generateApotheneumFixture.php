{
  /**
   * Generated by scripts/generateApotheneumFixture.php - do not edit manually
   * https://github.com/Apotheneum/Apotheneum
   */
  
  "label": "Apotheneum",
  "tag": "Apotheneum",
  
  "parameters": {
    "nodeSpacing": { "type": "float", "min": 1, "default": 9.375, "label": "Spacing", "description": "Spacing of nodes" },
    "nodeInset": { "type": "float", "min": 1, "default": 15.8125, "label": "Inset", "description": "Inset of side nets in inches" },
    "cubeTop": { "type": "float", "min": 1, "default": 444, "label": "Top", "description": "Top of the cube LED nets in inches" },
    "cubeSide": { "type": "float", "min": 1, "default": 491, "label": "Side", "description": "Side of the cube in inches" },
    "cylinderRadius": { "type": "float", "min": 1, "default": 180, "label": "Radius", "description": "Radius of the cylinder in inches" },
    "meshEnabled": { "type": "boolean", "default": true, "label": "Mesh UI", "description": "Whether the mesh is rendered" },
    "meshInset": { "type": "float", "min": 1, "default": 1, "label": "Mesh Inset", "description": "Inset of the mesh behind nets" },
    "meshWidth": { "type": "float", "min": 0.1, "default": 1, "label": "Mesh Width", "description": "Width of the mesh net" },
    "meshNodeSize": { "type": "float", "min": 1, "default": 5, "label": "Mesh Node Size", "description": "Width of the mesh nodes" },
    "trussWidth": { "type": "float", "min": 1, "default": 12, "label": "Truss Width", "description": "Truss column width" },
    "trussTop": { "type": "float", "min": 1, "default": 480, "label": "Truss Top", "description": "Truss column height" },
    "sandEnabled": { "type": "boolean", "default": true, "label": "Sand UI", "description": "Whether the sand is rendered" },
    "sandScale": { "type": "float", "min": 1, "default": 20, "label": "Sand Scale", "description": "Scale of sand texture" },
    "haloEnabled": { "type": "boolean", "default": true, "label": "Halo UI", "description": "Whether a ground halo is rendered" },
    "haloScale": { "type": "float", "min": 1, "default": 3200, "label": "Halo Scale", "description": "Size of light halo on groud" },
    "starsEnabled": { "type": "boolean", "default": true, "label": "Stars UI", "description": "Whether the stars are rendered" },
    "peopleEnabled": { "type": "boolean", "default": true, "label": "People UI", "description": "Whether people are rendered" },
<?php
$params = array();
for ($i = 1; $i <= 20; ++$i) {
  $digit = sprintf("%02d", $i);
  $params []= '"cub'.$digit.'On": { "type": "boolean", "default": true, "label": "CUB '.$digit.'", "description": "CUB-'.$digit.' Enabled" }';
  $params []= '"cub'.$digit.'": { "type": "string", "default": "10.0.1.1'.$digit.'", "label": "CUB '.$digit.' IP", "description": "CUB-'.$digit.' IP address" }';
}
for ($i = 1; $i <= 12; ++$i) {
  $digit = sprintf("%02d", $i);
  $ip = sprintf("%02d", 20 + $i);
  $params []= '"cyl'.$digit.'On": { "type": "boolean", "default": true, "label": "CYL '.$digit.'", "description": "CYL-'.$digit.' Enabled" }';
  $params []= '"cyl'.$digit.'": { "type": "string", "default": "10.0.1.1'.$ip.'", "label": "CYL '.$digit.' IP", "description": "CYL-'.$digit.' IP address" }';
}
echo '    '.join(",\n    ", $params)."\n";
?>
  },

  "components": [
    {
      "type": "Apotheneum-CubeFace",
      "tags": ["cube", "front", "exterior", "cubeFront", "cubeFrontExterior"],
      
      "cubeTop": "$cubeTop",
      "nodeSpacing": "$nodeSpacing",
      "meshEnabled": "$meshEnabled",
      "meshInset": "$meshInset",
      "meshWidth": "$meshWidth",
      "meshNodeSize": "$meshNodeSize",
      "stripYaw": 0,
      "stripRoll": -90,
      
      "x": "$nodeInset"
    },
    {
      "type": "Apotheneum-CubeFace",
      "tags": ["cube", "right", "exterior", "cubeRight", "cubeRightExterior"],
      
      "cubeTop": "$cubeTop",
      "nodeSpacing": "$nodeSpacing",
      "stripYaw": 0,
      "stripRoll": -90,
      
      "x": "$cubeSide",
      "z": "$nodeInset",
      "yaw": -90
    },
    {
      "type": "Apotheneum-CubeFace",
      "tags": ["cube", "back", "exterior", "cubeBack", "cubeBackExterior"],
      
      "cubeTop": "$cubeTop",
      "nodeSpacing": "$nodeSpacing",
      "stripYaw": 0,
      "stripRoll": -90,
      
      "x": "$cubeSide - $nodeInset",
      "z": "$cubeSide",
      "yaw": -180
    },
    {
      "type": "Apotheneum-CubeFace",
      "tags": ["cube", "left", "exterior", "cubeLeft", "cubeLeftExterior"],
      
      "cubeTop": "$cubeTop",
      "nodeSpacing": "$nodeSpacing",
      "stripYaw": 0,
      "stripRoll": -90,
      
      "x": 0,
      "z": "$cubeSide - $nodeInset",
      "yaw": -270
    },
    {
      "type": "Apotheneum-CubeFace",
      "tags": ["cube", "front", "interior", "cubeFront", "cubeFrontInterior"],
      
      "cubeTop": "$cubeTop",
      "nodeSpacing": "$nodeSpacing",
      "stripYaw": 180,
      "stripRoll": -90,
      
      "x": "$nodeInset",
      "z": "2*$meshInset"
    },    
    {
      "type": "Apotheneum-CubeFace",
      "tags": ["cube", "right", "interior", "cubeRight", "cubeRightInterior"],
        
      "cubeTop": "$cubeTop",
      "nodeSpacing": "$nodeSpacing",
      "stripYaw": 180,
      "stripRoll": -90,
      
      "x": "$cubeSide - 2*$meshInset",
      "z": "$nodeInset",
      "yaw": -90
    },
    {
      "type": "Apotheneum-CubeFace",
      "tags": ["cube", "back", "interior", "cubeBack", "cubeBackInterior"],
      
      "cubeTop": "$cubeTop",
      "nodeSpacing": "$nodeSpacing",
      "stripYaw": 180,
      "stripRoll": -90,
      
      "x": "$cubeSide - $nodeInset",
      "z": "$cubeSide - 2*$meshInset",
      "yaw": -180
    },
    {
      "type": "Apotheneum-CubeFace",
      "tags": ["cube", "left", "interior", "cubeLeft", "cubeLeftInterior"],
      
      "cubeTop": "$cubeTop",
      "nodeSpacing": "$nodeSpacing",
      "stripYaw": 180,
      "stripRoll": -90,
      
      "x": "2*$meshInset",
      "z": "$cubeSide - $nodeInset",
      "yaw": -270
    },
    
    {
      "type": "strip",
      "tags": ["cylinder", "exterior", "cylinderExterior" ],

      "instances": 120,
      "numPoints": 43,      
      "x": "$cubeSide * 0.5 + $cylinderRadius * sin($instance * 3)",
      "z": "$cubeSide * 0.5 - $cylinderRadius * cos($instance * 3)",
      "y": "$cubeTop - 2*$nodeSpacing",
      "yaw": "-3 * $instance",
      "roll": -90,
      "spacing": "$nodeSpacing"
    },
    {
      "type": "strip",
      "tags": [ "cylinder", "interior", "cylinderInterior" ],
      
      "numPoints": 43,
      "instances": 120,
      "x": "$cubeSide * 0.5 + ($cylinderRadius - 2*$meshInset) * sin($instance * 3)",
      "z": "$cubeSide * 0.5 - ($cylinderRadius - 2*$meshInset) * cos($instance * 3)",
      "y": "$cubeTop - 2*$nodeSpacing",
      "yaw": "180 - 3*$instance",
      "roll": -90,
      "spacing": "$nodeSpacing"
    },
    {
      "type": "Person",
      "enabled": "$peopleEnabled",
      "instances": 8,
      "x": "$cubeSide*.5 + (350 + 80*sin($instance * 50) + $cubeSide*.5)*sin($instance * 77)",
      "z": "$cubeSide*.5 + (350 + 80*sin($instance * 50) + $cubeSide*.5)*cos($instance * 77)",
      "yaw": "-360 + ($instance * 77)",
      "scale": 4
    }  
  ],
  
  "ui": {
    "meshes": [
      {  
        "enabled": "$meshEnabled",
        "type": "uniformFill",
        "color": "0xff000000",
        "file": "Apotheneum-Mesh.obj"
      },
      {  
        "enabled": "$meshEnabled",
        "type": "phong",
        "color": "0xff191919",
        "vertices": [
          // Front left column
          { "type": "cuboid", "x": "-0.5 * $trussWidth", "z": "-0.5 * $trussWidth", "width": "$trussWidth", "height": "$trussTop", "depth": "$trussWidth" },
        
          // Front right column
          { "type": "cuboid", "x": "$cubeSide - 0.5 * $trussWidth", "z": "-0.5 * $trussWidth", "width": "$trussWidth", "height": "$trussTop", "depth": "$trussWidth" },
        
          // Rear left column
          { "type": "cuboid", "x": "- 0.5 * $trussWidth", "z": "$cubeSide - 0.5 * $trussWidth", "width": "$trussWidth", "height": "$trussTop", "depth": "$trussWidth" },

          // Rear right column
          { "type": "cuboid", "x": "$cubeSide - 0.5 * $trussWidth", "z": "$cubeSide - 0.5 * $trussWidth", "width": "$trussWidth", "height": "$trussTop", "depth": "$trussWidth" },        
        
          // Top front truss
          { "type": "cuboid", "x": "0.5 * $trussWidth", "y": "$trussTop - $trussWidth", "z": "-0.5 * $trussWidth", "width": "$cubeSide - $trussWidth", "height": "$trussWidth", "depth": "$trussWidth" },
        
          // Top rear truss
          { "type": "cuboid", "x": "0.5 * $trussWidth", "y": "$trussTop - $trussWidth", "z": "$cubeSide - 0.5 * $trussWidth", "width": "$cubeSide - $trussWidth", "height": "$trussWidth", "depth": "$trussWidth" },
        
          // Top left truss
          { "type": "cuboid", "x": "-0.5 * $trussWidth", "y": "$trussTop - $trussWidth", "z": "0.5 * $trussWidth", "depth": "$cubeSide - $trussWidth", "height": "$trussWidth", "width": "$trussWidth" },
        
          // Top right truss
          { "type": "cuboid", "x": "$cubeSide - 0.5 * $trussWidth", "y": "$trussTop - $trussWidth", "z": "0.5 * $trussWidth", "depth": "$cubeSide - $trussWidth", "height": "$trussWidth", "width": "$trussWidth" }
        ],
        "lighting": {
          "ambient": 0.1,
          "diffuse": 0.1,
          "specular": 0.1,
          "shininess": 4,
          "color": "0xff999999",
          "direction": { "x": .2, "y": .4, "z": .3 }
        }
      },
      {
        "enabled": "$sandEnabled",
        "type": "texture2d",
        "texture": "sand.jpg",
        "vertices": [
          { "x": -10000, "z": -10000, "u": 0, "v": 0 },
          { "x": 10000, "z": -10000, "u": "$sandScale", "v": 0 },
          { "x": -10000, "z": 10000, "u": 0, "v": "$sandScale" },
          { "x": -10000, "z": 10000, "u": 0, "v": "$sandScale" },
          { "x": 10000, "z": -10000, "u": "$sandScale", "v": 0 },
          { "x": 10000, "z": 10000, "u": "$sandScale", "v": "$sandScale" }
        ]
      },
      // Ground halo
      {
        "enabled": "$haloEnabled",
        "type": "texture2d",
        "texture": "gradient.png",
        "vertices": [
          { "type": "rect", "axis": "xz", "x": "($cubeSide-$haloScale)*.5", "y": 0.1, "z": "($cubeSide-$haloScale)*.5", "width": "$haloScale", "height": "$haloScale" }
        ]
      },
      // Sky
      {
        "enabled": "$starsEnabled",
        "type": "texture2d",
        "texture": "nightsky.png",
        "vertices": [
          { "type": "cuboid", "y": -1, "x": -10000, "z": -10000, "width": 20000, "depth": 20000, "height": 10000 }
        ]
      }
    ]
  },
  
  "outputs": [
<?php

$outputs = array();

// Cube outputs
for ($i = 0; $i < 20; ++$i) {
  $digit = sprintf("%02d", $i+1);
  $univExt = 6*$i;
  $univInt = 6*$i + 3;

  // Exterior cube universe
  $output = '{
      "enabled": "$cub'.$digit.'On",
      "protocol": "artnet",
      "host": "$cub'.$digit.'",
      "universe": '.$univExt.',
      "segments": ';

  $segments = array();
  for ($s = 0; $s < 10; ++$s) {
    $start = $i * 450 + $s * 45;
    $num = ($i % 5 == 2) ? 34 : 45;
    $reverse = ($s % 2 == 1) ? ', "reverse": true' : '';
    $segments []= '{ "start": '.$start.', "num": '.$num.$reverse.' }';
  }
  $output .= "[\n        ".join(",\n        ", $segments);
  $output .= '
      ]
    }';
  $outputs []= $output;

  // Interior cube universe
  $output = '{
      "enabled": "$cub'.$digit.'On",
      "protocol": "artnet",
      "host": "$cub'.$digit.'",
      "universe": '.$univInt.',
      "segments": ';
  $segments = array();
  for ($s = 0; $s < 10; ++$s) {
    $start = 9000 + $i * 450 + $s * 45;
    $num = ($i % 5 == 2) ? 34 : 45;
    $reverse = ($s % 2 == 1) ? ', "reverse": true' : '';
    $segments []= '{ "start": '.$start.', "num": '.$num.$reverse.' }';
  }
  $output .= "[\n        ".join(",\n        ", $segments);
  $output .= '
      ]
    }';
  $outputs []= $output;
}

// Cylinder outputs
for ($i = 0; $i < 12; ++$i) {
  $d = $i+1;
  if ($d == 12) {
    $d = 0;
  }
  
  $digit = sprintf("%02d", $d+1);
  $univExt = 120 + 6*$d;
  $univInt = 123 + 6*$d;

  // Exterior cube universe
  $output = '{
      "enabled": "$cyl'.$digit.'On",
      "protocol": "artnet",
      "host": "$cyl'.$digit.'",
      "universe": '.$univExt.',
      "segments": ';

  $segments = array();
  for ($s = 0; $s < 10; ++$s) {
    $start = 18000 + $i * 430 + $s * 43;
    $num = ($d % 3 == 2) ? 32 : 43;
    $reverse = ($s % 2 == 1) ? ', "reverse": true' : '';
    $segments []= '{ "start": '.$start.', "num": '.$num.$reverse.' }';
  }
  $output .= "[\n        ".join(",\n        ", $segments);
  $output .= '
      ]
    }';
  $outputs []= $output;

  // Interior cube universe
  $output = '{
      "enabled": "$cyl'.$digit.'On",
      "protocol": "artnet",
      "host": "$cyl'.$digit.'",
      "universe": '.$univInt.',
      "segments": ';
  $segments = array();
  for ($s = 0; $s < 10; ++$s) {
    $start = 23160 + $i * 430 + $s * 43;
    $num = ($d % 3 == 2) ? 32 : 43;
    $reverse = ($s % 2 == 1) ? ', "reverse": true' : '';
    $segments []= '{ "start": '.$start.', "num": '.$num.$reverse.' }';
  }
  $output .= "[\n        ".join(",\n        ", $segments);
  $output .= '
      ]
    }';
  $outputs []= $output;
}

echo '    '.join(",\n    ", $outputs)."\n";
?>
  ]
}
